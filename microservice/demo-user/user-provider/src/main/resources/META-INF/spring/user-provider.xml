<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--服务唯一标识，类似于spring中的beanid-->
    <!--<dubbo:application name="demo-provider" owner="zhao"/>-->

    <!--<dubbo:monitor protocol="registry"/>-->
    <!--暴露的服务地址, dubbo也是基于tcp协议，相互之间交互也需要ip:端口-->
    <!--<dubbo:registry address="N/A"/>-->
    <!-- 加入dubbo结合zookeeper后的配置-->
    <!--<dubbo:registry protocol="zookeeper" address=":2181"/>-->
    <!--当前服务所依赖的协议， 协议名称不能写错webservice, hessian, thrift...., 如果是单个协议不需要写-->
    <!--<dubbo:protocol name="dubbo" port="20880"/>-->
    <!--<dubbo:protocol name="hessian" port="8080"/>-->

    <!--提供方信息-->
    <dubbo:application name="${application.name}" owner="${dubbo.application.owner}"/>

    <dubbo:registry protocol="zookeeper" address="${dubbo.zk.servers}"
                    group="${dubbo.zk.group}"
                    file="${dubbo.cache.dir}/user-service.cache"/>

    <dubbo:protocol name="dubbo"
                    port="${dubbo.service.provider.port}"
                    accesslog="${dubbo.protocol.accesslog}"/>

    <!--进去正题， 服务暴露的接口， 及对应的实现-->
    <dubbo:service interface="com.lx.user.IUserCoreService" ref="userService"/>
    <bean id="userService" class="com.lx.user.services.UserCoreServiceImpl"/>
</beans>