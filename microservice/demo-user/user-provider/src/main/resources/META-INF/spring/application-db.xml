<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	 <bean id="datasourcePool" abstract="true" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	 	 <property name="initialSize" value="${dbPool.initialSize}" />
	     <property name="minIdle" value="${dbPool.minIdle}" />
	     <property name="maxActive" value="${dbPool.maxActive}" />

	     <property name="maxWait" value="${dbPool.maxWait}" />

	     <property name="timeBetweenEvictionRunsMillis" value="${dbPool.timeBetweenEvictionRunsMillis}" />

	     <property name="minEvictableIdleTimeMillis" value="${dbPool.minEvictableIdleTimeMillis}" />

	     <property name="validationQuery" value="${dbPool.validationQuery}" />
	     <property name="testWhileIdle" value="${dbPool.testWhileIdle}" />
	     <property name="testOnBorrow" value="${dbPool.testOnBorrow}" />
	     <property name="testOnReturn" value="${dbPool.testOnReturn}" />

	     <property name="poolPreparedStatements" value="${dbPool.poolPreparedStatements}" />
	     <property name="maxPoolPreparedStatementPerConnectionSize" value="${dbPool.maxPoolPreparedStatementPerConnectionSize}" />

	     <property name="filters" value="${dbPool.filters}" />
	 </bean>
	<!-- 创建数据库连接 -->
	  <bean id="dataSource" parent="datasourcePool">
	     <property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
	     <property name="url" value="${mysql.jdbc.url}" />
	     <property name="username" value="${mysql.jdbc.username}" />
	     <property name="password" value="${mysql.jdbc.password}" />
	 </bean>

	<!-- 创建spring的SqlSessionFactory -->
	<bean id="userSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<!--<property name="configLocation" value="classpath:META-INF/spring/mybatis-config.xml" />-->
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.lx.user.dal.entity" />
		<!-- 加载实体类映射文件 -->
		<property name="mapperLocations" value="classpath*:com/lx/user/dal/persistence/*Mapper.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactory" ref="userSqlSessionFactory">
		</property>
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.lx.user.dal.persistence" />
	</bean>

</beans>